name: Build ROCK 5B+ CLI Image

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'config/**'
      - '.github/workflows/build-rock-5b-plus-cli.yml'
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create GitHub release'
        required: false
        default: false
        type: boolean
      test_repo:
        description: 'Use test repository'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@v10
      with:
        root-reserve-mb: 24576
        swap-size-mb: 2048
        remove-dotnet: true
        remove-android: true
        remove-haskell: true
        remove-codeql: true
        remove-docker-images: true

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Set up QEMU Emulation
      uses: docker/setup-qemu-action@v3
      with:
        image: tonistiigi/binfmt:latest

    - name: Setup build environment
      uses: devcontainers/ci@v0.3
      with:
        push: never
        runCmd: |
          src/bin/rsdk setup
          src/bin/rsdk welcome

    - name: Build ROCK 5B+ CLI Image (512-byte sectors only)
      uses: devcontainers/ci@v0.3
      with:
        push: never
        runCmd: |
          options=()
          if [[ "${{ inputs.test_repo }}" == "true" ]]; then
            options+=("--test-repo")
          fi
          
          # Build only 512-byte sector image (optimal for eMMC/SD cards)
          echo "Building ROCK 5B+ CLI with 512-byte sectors..."
          src/bin/rsdk shell rsdk build "${options[@]}" --sector-size 512 --image-name "output.img" rock-5b-plus bookworm cli

    - name: Prepare release assets
      id: prep
      run: |
        cd out/rock-5b-plus*
        sudo chown -R $USER:$GROUPS .
        BUILD_TUPLE="$(basename "$(realpath .)")"
        echo "BUILD_TUPLE=$BUILD_TUPLE" >> $GITHUB_OUTPUT
        
        # Generate timestamp
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_OUTPUT
        
        # Rename files with timestamp
        sed -i "s/rootfs.tar/${BUILD_TUPLE}_${TIMESTAMP}.rootfs.tar/" build-image
        for i in *; do
          if [[ "$i" != *"$TIMESTAMP"* ]]; then
            mv "$i" "${BUILD_TUPLE}_${TIMESTAMP}.$i"
          fi
        done
        
        # Compress files
        xz -vT 0 *.img *.tar
        
        # Generate checksums
        find . -type f -exec sha512sum {} \; | tee "${BUILD_TUPLE}_${TIMESTAMP}.sha512sum"
        
        # List final files
        echo "Final build assets:"
        ls -la

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rock-5b-plus-cli-${{ steps.prep.outputs.TIMESTAMP }}
        path: out/**/*
        retention-days: 30

    - name: Create Release
      if: github.event_name == 'release' || inputs.create_release == true
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: rock-5b-plus-cli-${{ steps.prep.outputs.TIMESTAMP }}
        release_name: ROCK 5B+ CLI Image ${{ steps.prep.outputs.TIMESTAMP }}
        body: |
          ## ROCK 5B+ CLI Image Build
          
          **Build Information:**
          - Product: ROCK 5B+ (RK3588)
          - Edition: CLI (Command Line Interface)
          - Suite: Debian Bookworm
          - Architecture: ARM64
          - Build Date: ${{ steps.prep.outputs.TIMESTAMP }}
          
          **Downloads:**
          - ðŸ“¦ [ROCK 5B+ CLI Image](https://github.com/${{ github.repository }}/releases/download/rock-5b-plus-cli-${{ steps.prep.outputs.TIMESTAMP }}/${{ steps.prep.outputs.BUILD_TUPLE }}_${{ steps.prep.outputs.TIMESTAMP }}.output.img.xz)
          - ðŸ“¦ [Root Filesystem](https://github.com/${{ github.repository }}/releases/download/rock-5b-plus-cli-${{ steps.prep.outputs.TIMESTAMP }}/${{ steps.prep.outputs.BUILD_TUPLE }}_${{ steps.prep.outputs.TIMESTAMP }}.rootfs.tar.xz)
          
          **Installation:**
          1. Download the ROCK 5B+ CLI Image
          2. Flash to microSD card or eMMC using tools like `dd` or Etcher
          3. Boot your ROCK 5B+ from the flashed media
          
          **Default Credentials:**
          - Username: `radxa` / Password: `radxa`
          - Username: `rock` / Password: `rock`
          
          **Features:**
          - Minimal CLI-only system
          - Pre-configured hardware support for ROCK 5B+
          - 512-byte sectors (optimal for eMMC/SD cards)
          - NetworkManager for network configuration
          - SSH server (enabled on headless boot)
          - Hardware tools (GPIO, I2C, SPI, PWM)
          
          ### SHA-512 Checksums
          
          ```
        draft: false
        prerelease: false

    - name: Upload CLI Image
      if: steps.create_release.outputs.upload_url
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: out/${{ steps.prep.outputs.BUILD_TUPLE }}/${{ steps.prep.outputs.BUILD_TUPLE }}_${{ steps.prep.outputs.TIMESTAMP }}.output.img.xz
        asset_name: ${{ steps.prep.outputs.BUILD_TUPLE }}_${{ steps.prep.outputs.TIMESTAMP }}.output.img.xz
        asset_content_type: application/x-xz

    - name: Upload Root Filesystem
      if: steps.create_release.outputs.upload_url
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: out/${{ steps.prep.outputs.BUILD_TUPLE }}/${{ steps.prep.outputs.BUILD_TUPLE }}_${{ steps.prep.outputs.TIMESTAMP }}.rootfs.tar.xz
        asset_name: ${{ steps.prep.outputs.BUILD_TUPLE }}_${{ steps.prep.outputs.TIMESTAMP }}.rootfs.tar.xz
        asset_content_type: application/x-xz

    - name: Upload Checksums
      if: steps.create_release.outputs.upload_url
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: out/${{ steps.prep.outputs.BUILD_TUPLE }}/${{ steps.prep.outputs.BUILD_TUPLE }}_${{ steps.prep.outputs.TIMESTAMP }}.sha512sum
        asset_name: ${{ steps.prep.outputs.BUILD_TUPLE }}_${{ steps.prep.outputs.TIMESTAMP }}.sha512sum
        asset_content_type: text/plain

    - name: Update release with checksums
      if: steps.create_release.outputs.upload_url
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const checksumPath = `out/${{ steps.prep.outputs.BUILD_TUPLE }}/${{ steps.prep.outputs.BUILD_TUPLE }}_${{ steps.prep.outputs.TIMESTAMP }}.sha512sum`;
          const checksumContent = fs.readFileSync(checksumPath, 'utf8');
          
          const { data: release } = await github.rest.repos.getReleaseByTag({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag: 'rock-5b-plus-cli-${{ steps.prep.outputs.TIMESTAMP }}'
          });
          
          await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: release.id,
            body: release.body + '\n' + checksumContent + '\n```'
          });